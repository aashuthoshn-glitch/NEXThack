{"version":3,"file":"dashboardtalk-dashboard.js","mappings":";yPACA,IAAAA,EAAAC,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAAC,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAA,OAAAK,EAAAH,EAAA,mBAAAV,EAAAE,EAAAE,GAAA,IAAAE,EAAAC,EAAAG,EAAAI,EAAA,EAAAC,EAAAX,GAAA,GAAAY,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAb,EAAA,EAAAgB,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAA,GAAAsB,EAAA,SAAArB,EAAAC,GAAA,OAAAM,EAAAP,EAAAQ,EAAA,EAAAG,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,CAAA,YAAAC,EAAApB,EAAAE,GAAA,IAAAK,EAAAP,EAAAU,EAAAR,EAAAH,EAAA,GAAAiB,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAA,KAAAK,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAA,GAAAN,EAAA,GAAAI,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAA,OAAAC,EAAA,MAAAD,EAAA,GAAAA,EAAA,GAAAR,GAAAQ,EAAA,IAAAc,KAAAhB,EAAAJ,EAAA,GAAAoB,EAAAd,EAAA,KAAAC,EAAA,EAAAU,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAA,IAAAc,EAAAG,IAAAnB,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAqB,KAAAjB,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAA,OAAAH,GAAAJ,EAAA,SAAAmB,EAAA,MAAAH,GAAA,EAAAd,CAAA,iBAAAE,EAAAW,EAAAQ,GAAA,GAAAT,EAAA,QAAAU,UAAA,oCAAAR,GAAA,IAAAD,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAA,EAAAT,EAAAY,KAAAM,GAAA,CAAAV,IAAAC,EAAAA,EAAA,GAAAA,EAAA,IAAAU,EAAAf,GAAA,GAAAkB,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAA,OAAAI,EAAA,EAAAR,EAAA,IAAAC,IAAAH,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAA,MAAAc,UAAA,wCAAAzB,EAAA2B,KAAA,OAAA3B,EAAAW,EAAAX,EAAA4B,MAAApB,EAAA,IAAAA,EAAA,YAAAA,IAAAR,EAAAO,EAAAsB,SAAA7B,EAAA0B,KAAAnB,GAAAC,EAAA,IAAAG,EAAAc,UAAA,oCAAApB,EAAA,YAAAG,EAAA,GAAAD,EAAAR,CAAA,UAAAC,GAAAiB,EAAAC,EAAAf,EAAA,GAAAQ,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAA,YAAApB,GAAAO,EAAAR,EAAAS,EAAA,EAAAG,EAAAX,CAAA,SAAAe,EAAA,UAAAa,MAAA5B,EAAA2B,KAAAV,EAAA,GAAAhB,EAAAI,EAAAE,IAAA,GAAAI,CAAA,KAAAS,EAAA,YAAAV,IAAA,UAAAoB,IAAA,UAAAC,IAAA,CAAA/B,EAAAY,OAAAoB,eAAA,IAAAxB,EAAA,GAAAL,GAAAH,EAAAA,EAAA,GAAAG,QAAAW,EAAAd,EAAA,GAAAG,EAAA,yBAAAH,GAAAW,EAAAoB,EAAAtB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAA,SAAAO,EAAAhB,GAAA,OAAAa,OAAAqB,eAAArB,OAAAqB,eAAAlC,EAAAgC,IAAAhC,EAAAmC,UAAAH,EAAAjB,EAAAf,EAAAM,EAAA,sBAAAN,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,CAAA,QAAA+B,EAAArB,UAAAsB,EAAAjB,EAAAH,EAAA,cAAAoB,GAAAjB,EAAAiB,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAArB,EAAAiB,EAAA1B,EAAA,qBAAAS,EAAAH,GAAAG,EAAAH,EAAAN,EAAA,aAAAS,EAAAH,EAAAR,EAAA,yBAAAW,EAAAH,EAAA,oDAAAyB,EAAA,kBAAAC,EAAA9B,EAAA+B,EAAAvB,EAAA,cAAAD,EAAAf,EAAAE,EAAAE,EAAAH,GAAA,IAAAO,EAAAK,OAAA2B,eAAA,IAAAhC,EAAA,gBAAAR,GAAAQ,EAAA,EAAAO,EAAA,SAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAAK,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAA,SAAAF,GAAA,YAAAyC,QAAAvC,EAAAE,EAAAJ,EAAA,GAAAE,EAAAM,EAAAA,EAAAR,EAAAE,EAAA,CAAA2B,MAAAzB,EAAAsC,YAAAzC,EAAA0C,cAAA1C,EAAA2C,UAAA3C,IAAAD,EAAAE,GAAAE,GAAAE,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAS,EAAAf,EAAAE,EAAAE,EAAAH,EAAA,UAAA4C,EAAAzC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAA,QAAAD,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAAqB,KAAA,OAAAzB,GAAA,YAAAJ,EAAAI,EAAA,CAAAI,EAAAoB,KAAA3B,EAAAW,GAAAkC,QAAAC,QAAAnC,GAAAoC,KAAA9C,EAAAI,EAAA,UAAA2C,EAAA7C,GAAA,sBAAAH,EAAA,KAAAD,EAAAkD,UAAA,WAAAJ,QAAA,SAAA5C,EAAAI,GAAA,IAAAe,EAAAjB,EAAA+C,MAAAlD,EAAAD,GAAA,SAAAoD,EAAAhD,GAAAyC,EAAAxB,EAAAnB,EAAAI,EAAA8C,EAAAC,EAAA,OAAAjD,EAAA,UAAAiD,EAAAjD,GAAAyC,EAAAxB,EAAAnB,EAAAI,EAAA8C,EAAAC,EAAA,QAAAjD,EAAA,CAAAgD,OAAA,eAAAE,EAAAtD,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAsB,OAAAvB,IAAA,KAAAK,EAAAJ,EAAAD,GAAAK,EAAAoC,WAAApC,EAAAoC,aAAA,EAAApC,EAAAqC,cAAA,YAAArC,IAAAA,EAAAsC,UAAA,GAAA/B,OAAA2B,eAAAxC,EAAAuD,EAAAjD,EAAAkD,KAAAlD,EAAA,WAAAiD,EAAAtD,GAAA,IAAAO,EAAA,SAAAP,GAAA,aAAAwD,EAAAxD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAE,OAAAuD,aAAA,YAAA1D,EAAA,KAAAQ,EAAAR,EAAA2B,KAAA1B,EAAAC,UAAA,aAAAuD,EAAAjD,GAAA,OAAAA,EAAA,UAAAkB,UAAA,uDAAAiC,OAAA1D,EAAA,CAAA2D,CAAA3D,GAAA,gBAAAwD,EAAAjD,GAAAA,EAAAA,EAAA,GADA,IAIMqD,EAAU,WAOb,OAVH7D,EAIE,SAAA6D,EAAYC,IAJd,SAAAzC,EAAAjB,GAAA,KAAAiB,aAAAjB,GAAA,UAAAsB,UAAA,qCAI2BqC,CAAA,KAAAF,GACvBG,KAAKF,YAAcA,EACnBE,KAAKC,SAAW,GAChBD,KAAKE,SAAU,EACfF,KAAKG,MAAQ,KACbH,KAAKI,gBAAkB,IACzB,EAVFlE,EAUG,EAAAsD,IAAA,OAAA3B,OAAAwC,EAAApB,EAAAZ,IAAAE,EAED,SAAA+B,IAAA,IAAAC,EAAA,YAAAlC,IAAAC,EAAA,SAAAkC,GAAA,cAAAA,EAAApE,GAAA,OACgB,OAAd4D,KAAKS,SAASD,EAAApE,EAAA,EACR4D,KAAKU,eAAc,OAGzBV,KAAKI,gBAAkBO,YAAY,WACjCJ,EAAKG,cACP,EAAG,KAAO,cAAAF,EAAAnD,EAAA,KAAAiD,EAAA,SACX,WARS,OAAAD,EAAAlB,MAAC,KAADD,UAAA,KAAAM,IAAA,SAAA3B,MAUV,WACE,IAAM+C,EAAYC,SAASC,eAAed,KAAKF,aAC1Cc,GAKLA,EAAUG,UAAY,06BA4BtBf,KAAKgB,aAhCHC,QAAQd,MAAM,uBAAwBH,KAAKF,YAiC/C,GAAC,CAAAN,IAAA,YAAA3B,MAED,WACE,IAAIgD,SAASC,eAAe,sBAA5B,CAEA,IAAMI,EAASL,SAASM,cAAc,SACtCD,EAAOE,GAAK,qBACZF,EAAOG,YAAc,myIAgKrBR,SAASS,KAAKC,YAAYL,EApK+B,CAqK3D,GAAC,CAAA1B,IAAA,eAAA3B,OAAA2D,EAAAvC,EAAAZ,IAAAE,EAED,SAAAkD,IAAA,IAAAC,EAAA,OAAArD,IAAAC,EAAA,SAAAqD,GAAA,cAAAA,EAAA1E,EAAA0E,EAAAvF,GAAA,OAEoB,OADlB4D,KAAKE,SAAU,EACfF,KAAKG,MAAQ,KAAKwB,EAAA1E,EAAA,EAAA0E,EAAAvF,EAAA,EAIV,IAAI0C,QAAQ,SAAAC,GAAO,OAAI6C,WAAW7C,EAAS,IAAK,GAAC,OAGvDiB,KAAKC,SAAW,CACd,CACEmB,GAAI,EACJS,QAAS,kCACTC,iBAAkB,WAClBC,UAAWC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IAC3CC,aAAc,CACZC,MAAO,QACPjE,YAAa,eACbkE,KAAM,UAGV,CACElB,GAAI,EACJS,QAAS,gDACTC,iBAAkB,aAClBC,UAAWC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IAC3CC,aAAc,CACZC,MAAO,QACPjE,YAAa,eACbkE,KAAM,UAGV,CACElB,GAAI,EACJS,QAAS,kDACTC,iBAAkB,eAClBC,UAAWC,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,IAC3CC,aAAc,CACZC,MAAO,QACPjE,YAAa,eACbkE,KAAM,WAKZtC,KAAKuC,gBAAgBZ,EAAAvF,EAAA,eAAAuF,EAAA1E,EAAA,EAAAyE,EAAAC,EAAAvE,EAErB6D,QAAQd,MAAM,0BAAyBuB,GACvC1B,KAAKG,MAAQ,0BACbH,KAAKuC,gBAAgB,OAEA,OAFAZ,EAAA1E,EAAA,EAErB+C,KAAKE,SAAU,EAAMyB,EAAA3E,EAAA,iBAAA2E,EAAAtE,EAAA,KAAAoE,EAAA,qBAExB,WArDiB,OAAAD,EAAArC,MAAC,KAADD,UAAA,KAAAM,IAAA,gBAAA3B,MAuDlB,WAAgB,IAAA2E,EAAA,KACRC,EAAU5B,SAASC,eAAe,uBACxC,GAAK2B,EAEL,GAAIzC,KAAKE,SAAoC,IAAzBF,KAAKC,SAASzC,OAChCiF,EAAQ1B,UAAY,8JAMf,GAAIf,KAAKG,MACdsC,EAAQ1B,UAAY,0GAAH2B,OAGX1C,KAAKG,MAAK,qIAIX,GAA6B,IAAzBH,KAAKC,SAASzC,OACvBiF,EAAQ1B,UAAY,sJAMf,CACL,IAAM4B,EAAe3C,KAAKC,SAAS2C,IAAI,SAAAf,GAAO,4FAAAa,OAC8Bb,EAAQO,aAAaC,MAAK,yIAAAK,OAG5Fb,EAAQO,aAAahE,YAAW,+FAAAsE,OAGhCF,EAAKK,WAAWhB,EAAQE,WAAU,uHAAAW,OAI5Bb,EAAQC,iBAAgB,4BAAAY,OAChCb,EAAQA,QAAO,gDAGpBiB,KAAK,IAERL,EAAQ1B,UAAY,sCAAH2B,OAAyCC,EAAY,SACxE,CACF,GAAC,CAAAnD,IAAA,kBAAA3B,OAAAkF,EAAA9D,EAAAZ,IAAAE,EAED,SAAAyE,IAAA,OAAA3E,IAAAC,EAAA,SAAA2E,GAAA,cAAAA,EAAA7G,GAAA,cAAA6G,EAAA7G,EAAA,EACQ4D,KAAKU,eAAc,cAAAuC,EAAA5F,EAAA,KAAA2F,EAAA,SAC1B,WAFoB,OAAAD,EAAA5D,MAAC,KAADD,UAAA,KAAAM,IAAA,aAAA3B,MAIrB,SAAWkE,GACT,IAAMmB,EAAO,IAAIhB,KAAiB,IAAZH,GAEhBoB,EADM,IAAIjB,KACGgB,EAGnB,OAAIC,EAAO,IACF,WAGLA,EAAO,KACFnB,KAAKC,MAAMkB,EAAO,KAAS,QAGhCA,EAAO,MACFnB,KAAKC,MAAMkB,EAAO,MAAW,QAG/BD,EAAKE,oBACd,GAAC,CAAA5D,IAAA,mBAAA3B,MAED,SAAiBwE,GAEfgB,OAAOC,KAAK,uBAADZ,OAAwBL,GAAS,SAC9C,GAAC,CAAA7C,IAAA,cAAA3B,MAED,WAEEwF,OAAOC,KAAK,gBAAiB,SAC/B,GAAC,CAAA9D,IAAA,UAAA3B,MAED,WACMmC,KAAKI,iBACPmD,cAAcvD,KAAKI,gBAEvB,IAlXFlE,GAAAoD,EAAAtD,EAAAU,UAAAR,GAAAW,OAAA2B,eAAAxC,EAAA,aAAA4C,UAAA,IAAA5C,EAAA,IAAAA,EAAAE,EAyUG6G,EAvGAvB,EAxNAnB,CAwWA,CA/Wa,GAoXhBQ,SAAS2C,iBAAiB,mBAAoB,WAC1B3C,SAASC,eAAe,0BAE3B,IAAIjB,EAAW,yBACjB4D,MAEf,GAGAJ,OAAOxD,WAAaA,C","sources":["webpack://dashboardtalk/./src/dashboard.js"],"sourcesContent":["/**\r\n * Dashboard Talk Widget - Basic JavaScript Version\r\n */\r\n\r\nclass TalkWidget {\r\n  constructor(containerId) {\r\n    this.containerId = containerId;\r\n    this.messages = [];\r\n    this.loading = false;\r\n    this.error = null;\r\n    this.refreshInterval = null;\r\n  }\r\n\r\n  async init() {\r\n    this.render();\r\n    await this.loadMessages();\r\n    \r\n    // Refresh messages every 30 seconds\r\n    this.refreshInterval = setInterval(() => {\r\n      this.loadMessages();\r\n    }, 30000);\r\n  }\r\n\r\n  render() {\r\n    const container = document.getElementById(this.containerId);\r\n    if (!container) {\r\n      console.error('Container not found:', this.containerId);\r\n      return;\r\n    }\r\n\r\n    container.innerHTML = `\r\n      <div class=\"talk-widget\">\r\n        <div class=\"talk-widget__header\">\r\n          <h3 class=\"talk-widget__title\">\r\n            <span class=\"icon icon-talk\"></span>\r\n            Talk Messages\r\n          </h3>\r\n          <button class=\"talk-widget__refresh\" onclick=\"talkWidget.refreshMessages()\" title=\"Refresh messages\">\r\n            <span class=\"icon icon-refresh\"></span>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"talk-widget__content\" id=\"talk-widget-content\">\r\n          <div class=\"talk-widget__loading\">\r\n            <span class=\"icon icon-loading\"></span>\r\n            Loading messages...\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"talk-widget__footer\">\r\n          <button class=\"talk-widget__compose\" onclick=\"talkWidget.openTalkApp()\" title=\"Open Talk app\">\r\n            <span class=\"icon icon-add\"></span>\r\n            New Message\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    this.addStyles();\r\n  }\r\n\r\n  addStyles() {\r\n    if (document.getElementById('talk-widget-styles')) return;\r\n\r\n    const styles = document.createElement('style');\r\n    styles.id = 'talk-widget-styles';\r\n    styles.textContent = `\r\n      .talk-widget {\r\n        background: var(--color-background-plain, #ffffff);\r\n        border-radius: var(--border-radius, 8px);\r\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n        overflow: hidden;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n      }\r\n\r\n      .talk-widget__header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 12px 16px;\r\n        background: var(--color-background-hover, #f5f5f5);\r\n        border-bottom: 1px solid var(--color-border, #e0e0e0);\r\n      }\r\n\r\n      .talk-widget__title {\r\n        margin: 0;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        color: var(--color-text, #333);\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n\r\n      .talk-widget__refresh {\r\n        background: none;\r\n        border: none;\r\n        padding: 4px;\r\n        cursor: pointer;\r\n        border-radius: var(--border-radius, 8px);\r\n        color: var(--color-text-lighter, #666);\r\n        transition: all 0.2s ease;\r\n      }\r\n\r\n      .talk-widget__refresh:hover {\r\n        background: var(--color-background-hover, #f0f0f0);\r\n        color: var(--color-text, #333);\r\n      }\r\n\r\n      .talk-widget__content {\r\n        max-height: 400px;\r\n        overflow-y: auto;\r\n        padding: 8px;\r\n      }\r\n\r\n      .talk-widget__loading,\r\n      .talk-widget__error,\r\n      .talk-widget__empty {\r\n        padding: 20px;\r\n        text-align: center;\r\n        color: var(--color-text-lighter, #666);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n\r\n      .talk-widget__error {\r\n        color: var(--color-error, #e74c3c);\r\n      }\r\n\r\n      .talk-widget__retry {\r\n        background: var(--color-primary, #0082c9);\r\n        color: white;\r\n        border: none;\r\n        padding: 6px 12px;\r\n        border-radius: var(--border-radius, 8px);\r\n        cursor: pointer;\r\n        font-size: 12px;\r\n      }\r\n\r\n      .talk-widget__retry:hover {\r\n        background: var(--color-primary-hover, #006ba3);\r\n      }\r\n\r\n      .talk-widget__message {\r\n        padding: 12px;\r\n        border-radius: var(--border-radius, 8px);\r\n        margin-bottom: 8px;\r\n        cursor: pointer;\r\n        transition: background-color 0.2s ease;\r\n        border: 1px solid transparent;\r\n      }\r\n\r\n      .talk-widget__message:hover {\r\n        background: var(--color-background-hover, #f5f5f5);\r\n        border-color: var(--color-border, #e0e0e0);\r\n      }\r\n\r\n      .talk-widget__message-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 4px;\r\n      }\r\n\r\n      .talk-widget__conversation-name {\r\n        font-weight: 600;\r\n        color: var(--color-primary, #0082c9);\r\n        font-size: 12px;\r\n      }\r\n\r\n      .talk-widget__message-time {\r\n        font-size: 11px;\r\n        color: var(--color-text-lighter, #666);\r\n      }\r\n\r\n      .talk-widget__message-content {\r\n        font-size: 13px;\r\n        line-height: 1.4;\r\n        color: var(--color-text, #333);\r\n        word-wrap: break-word;\r\n      }\r\n\r\n      .talk-widget__footer {\r\n        padding: 12px 16px;\r\n        background: var(--color-background-hover, #f5f5f5);\r\n        border-top: 1px solid var(--color-border, #e0e0e0);\r\n      }\r\n\r\n      .talk-widget__compose {\r\n        width: 100%;\r\n        background: var(--color-primary, #0082c9);\r\n        color: white;\r\n        border: none;\r\n        padding: 8px 12px;\r\n        border-radius: var(--border-radius, 8px);\r\n        cursor: pointer;\r\n        font-size: 13px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 6px;\r\n        transition: background-color 0.2s ease;\r\n      }\r\n\r\n      .talk-widget__compose:hover {\r\n        background: var(--color-primary-hover, #006ba3);\r\n      }\r\n\r\n      .icon {\r\n        display: inline-block;\r\n        width: 16px;\r\n        height: 16px;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n      }\r\n\r\n      .icon-talk::before { content: \"💬\"; }\r\n      .icon-refresh::before { content: \"🔄\"; }\r\n      .icon-loading::before { content: \"⏳\"; }\r\n      .icon-error::before { content: \"❌\"; }\r\n      .icon-add::before { content: \"➕\"; }\r\n    `;\r\n\r\n    document.head.appendChild(styles);\r\n  }\r\n\r\n  async loadMessages() {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    try {\r\n      // Simulate API call - replace with actual Talk API integration\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock data for demonstration\r\n      this.messages = [\r\n        {\r\n          id: 1,\r\n          message: \"Hello! How are you doing today?\",\r\n          actorDisplayName: \"John Doe\",\r\n          timestamp: Math.floor(Date.now() / 1000) - 300,\r\n          conversation: {\r\n            token: \"room1\",\r\n            displayName: \"General Chat\",\r\n            type: \"group\"\r\n          }\r\n        },\r\n        {\r\n          id: 2,\r\n          message: \"The project is going well, thanks for asking!\",\r\n          actorDisplayName: \"Jane Smith\",\r\n          timestamp: Math.floor(Date.now() / 1000) - 600,\r\n          conversation: {\r\n            token: \"room2\",\r\n            displayName: \"Project Team\",\r\n            type: \"group\"\r\n          }\r\n        },\r\n        {\r\n          id: 3,\r\n          message: \"Don't forget about the meeting tomorrow at 2 PM\",\r\n          actorDisplayName: \"Mike Johnson\",\r\n          timestamp: Math.floor(Date.now() / 1000) - 900,\r\n          conversation: {\r\n            token: \"room3\",\r\n            displayName: \"Team Updates\",\r\n            type: \"group\"\r\n          }\r\n        }\r\n      ];\r\n\r\n      this.updateContent();\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n      this.error = 'Failed to load messages';\r\n      this.updateContent();\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  updateContent() {\r\n    const content = document.getElementById('talk-widget-content');\r\n    if (!content) return;\r\n\r\n    if (this.loading && this.messages.length === 0) {\r\n      content.innerHTML = `\r\n        <div class=\"talk-widget__loading\">\r\n          <span class=\"icon icon-loading\"></span>\r\n          Loading messages...\r\n        </div>\r\n      `;\r\n    } else if (this.error) {\r\n      content.innerHTML = `\r\n        <div class=\"talk-widget__error\">\r\n          <span class=\"icon icon-error\"></span>\r\n          ${this.error}\r\n          <button class=\"talk-widget__retry\" onclick=\"talkWidget.refreshMessages()\">Retry</button>\r\n        </div>\r\n      `;\r\n    } else if (this.messages.length === 0) {\r\n      content.innerHTML = `\r\n        <div class=\"talk-widget__empty\">\r\n          <span class=\"icon icon-talk\"></span>\r\n          No messages found\r\n        </div>\r\n      `;\r\n    } else {\r\n      const messagesHtml = this.messages.map(message => `\r\n        <div class=\"talk-widget__message\" onclick=\"talkWidget.openConversation('${message.conversation.token}')\">\r\n          <div class=\"talk-widget__message-header\">\r\n            <span class=\"talk-widget__conversation-name\">\r\n              ${message.conversation.displayName}\r\n            </span>\r\n            <span class=\"talk-widget__message-time\">\r\n              ${this.formatTime(message.timestamp)}\r\n            </span>\r\n          </div>\r\n          <div class=\"talk-widget__message-content\">\r\n            <strong>${message.actorDisplayName}:</strong>\r\n            ${message.message}\r\n          </div>\r\n        </div>\r\n      `).join('');\r\n\r\n      content.innerHTML = `<div class=\"talk-widget__messages\">${messagesHtml}</div>`;\r\n    }\r\n  }\r\n\r\n  async refreshMessages() {\r\n    await this.loadMessages();\r\n  }\r\n\r\n  formatTime(timestamp) {\r\n    const date = new Date(timestamp * 1000);\r\n    const now = new Date();\r\n    const diff = now - date;\r\n\r\n    // Less than 1 minute\r\n    if (diff < 60000) {\r\n      return 'Just now';\r\n    }\r\n    // Less than 1 hour\r\n    if (diff < 3600000) {\r\n      return Math.floor(diff / 60000) + 'm ago';\r\n    }\r\n    // Less than 24 hours\r\n    if (diff < 86400000) {\r\n      return Math.floor(diff / 3600000) + 'h ago';\r\n    }\r\n    // More than 24 hours\r\n    return date.toLocaleDateString();\r\n  }\r\n\r\n  openConversation(token) {\r\n    // Open the conversation in a new tab\r\n    window.open(`/apps/spreed/#/call/${token}`, '_blank');\r\n  }\r\n\r\n  openTalkApp() {\r\n    // Open the Talk app\r\n    window.open('/apps/spreed/', '_blank');\r\n  }\r\n\r\n  destroy() {\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n    }\r\n  }\r\n}\r\n\r\n// Initialize the widget when the DOM is ready\r\nlet talkWidget;\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const container = document.getElementById('dashboard-talk-widget');\r\n  if (container) {\r\n    talkWidget = new TalkWidget('dashboard-talk-widget');\r\n    talkWidget.init();\r\n  }\r\n});\r\n\r\n// Export for use in Nextcloud\r\nwindow.TalkWidget = TalkWidget;\r\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","TalkWidget","containerId","_classCallCheck","this","messages","loading","error","refreshInterval","_init","_callee","_this","_context","render","loadMessages","setInterval","container","document","getElementById","innerHTML","addStyles","console","styles","createElement","id","textContent","head","appendChild","_loadMessages","_callee2","_t","_context2","setTimeout","message","actorDisplayName","timestamp","Math","floor","Date","now","conversation","token","type","updateContent","_this2","content","concat","messagesHtml","map","formatTime","join","_refreshMessages","_callee3","_context3","date","diff","toLocaleDateString","window","open","clearInterval","addEventListener","init"],"sourceRoot":""}